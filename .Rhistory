View(test)
test <- data.frame(activity2["2012-10-01"])
View(test)
rownames(test) <- NULL
View(test)
test <- data.frame(activity2["2012-10-01"], "2012-10-01")
View(test)
test <- data.frame(activity2["2012-10-01"], "2012-10-01", row.names(activity2))
View(test)
completeActivity <- data.frame(steps=integer(), date=factor(), interval=integer())
for(date in uniqueDates) {}
for(date in uniqueDates) {
steps <- data.frame(activity2[date], date, row.names(cleanActivity))
rownames(steps) <- NULL
completeActivity <- rbind(completeActivity, steps)
}
for(date in uniqueDates) {
steps <- data.frame(activity2[date], date, row.names(activity2))
rownames(steps) <- NULL
completeActivity <- rbind(completeActivity, steps)
}
View(completeActivity)
for(date in uniqueDates) {
steps <- data.frame(activity2[date], date, row.names(activity2))
rownames(steps) <- NULL
completeActivity <- rbind(completeActivity, steps)
}
completeActivity <- data.frame(steps=integer(), date=factor(), interval=integer())
for(date in uniqueDates) {
steps <- data.frame(steps=activity2[date], date=date, interval=row.names(activity2))
rownames(steps) <- NULL
completeActivity <- rbind(completeActivity, steps)
}
completeActivity <- data.frame(steps=integer(), date=factor(), interval=integer())
View(completeActivity)
rownames(completeActivity)
rownames(completeActivity) <- NULL
View(completeActivity)
for(date in uniqueDates) {
steps <- data.frame(steps=activity2[date], date=date, interval=row.names(activity2))
completeActivity <- rbind(completeActivity, steps)
}
completeActivity <- data.frame(steps=integer(), date=factor(), interval=integer())
names(completeActivity)
for(date in uniqueDates) {
steps <- data.frame(steps=activity2[date], date=date, interval=row.names(activity2))
#rownames(steps) <- NULL
names(steps)
completeActivity <- rbind(completeActivity, steps)
}
steps <- data.frame(steps=activity2[date], date=date, interval=row.names(activity2))
names(steps)
for(date in uniqueDates) {
steps <- data.frame(steps=activity2[date], date=date, interval=row.names(activity2))
rownames(steps) <- NULL
names(steps) <- names(origActivity)
completeActivity <- rbind(completeActivity, steps)
}
for(date in uniqueDates) {
steps <- data.frame(steps=activity2[date], date=date, interval=row.names(activity2))
rownames(steps) <- NULL
names(steps) <- names(activity)
completeActivity <- rbind(completeActivity, steps)
}
completeActivity <- data.frame(steps=integer(), date=factor(), interval=integer())
for(date in uniqueDates) {
steps <- data.frame(steps=activity2[date], date=date, interval=row.names(activity2))
rownames(steps) <- NULL
names(steps) <- names(activity)
completeActivity <- rbind(completeActivity, steps)
}
View(completeActivity)
?aggregate
View(stepsPerDay)
step_sum <- tapply(activity$steps, activity$date, sum, na.rm = TRUE, simplify = TRUE)
View(step_sum)
stepsPerDayComplete <- aggregate(completeActivity$steps,
by=list(date=completeActivity$date), FUN=sum)
View(stepsPerDayComplete)
colnames(stepsPerDayComplete)[2] <- c("steps")
mean(stepsPerDayComplete$steps, na.rm = TRUE)
median(stepsPerDayComplete$steps, na.rm = TRUE)
# convert date from string to Date class
completeActivity$date <- as.Date(completeActivity$date, "%Y-%m-%d")
# add a new column indicating day of the week
completeActivity$day <- weekdays(completeActivity$date)
# add a new column called day type and initialize to weekday
completeActivity$type <- c("weekday")
View(completeActivity)
?weekdays
test <- factor("weekday", "weekend")
test
completeActivity[completeActivity$day == "Sunday"]$type <- c("weekend")
completeActivity[completeActivity$day == "Sunday"]$type <- "weekend"
completeActivity[completeActivity$day %in% "Sunday"]$type <- "weekend"
completeActivity[completeActivity$day %in% "Sunday"]
completeActivity[completeActivity$day == "Sunday"]
View(completeActivity)
names(completeActivity)
completeActivity[completeActivity$day == "Sunday"]
completeActivity[completeActivity$day == "Sunday"]
completeActivity[completeActivity$day %in% "Sunday"]
completeActivity[completeActivity[4] %in% "Sunday"]
completeActivity[completeActivity[4] %in% "Monday"]
completeActivity[completeActivity[4] == "Monday"]
completeActivity[completeActivity[4] == "Sunday"]
completeActivity$type <- as.factor(c("weekday"))
completeActivity[completeActivity$day == "Sunday"]
completeActivity[completeActivity$day %in% "Sunday"]
class(completeActivity$day)
completeActivity[, 'type'] <- as.factor(completeActivity[, 'type'])
class(completeActivity$day)
completeActivity[completeActivity[, "day"] == "Sunday"]
completeActivity[, "day"]
completeActivity[completeActivity[, "day"] == "Sunday",]
completeActivity[completeActivity[, "day"] == "Sunday",]$type
sum(completeActivity$type == "weekday")
sum(completeActivity$type == "weekend")
completeActivity[completeActivity[, "day"] == "Saturday",]$type <- as.factor(c("weekend"))
completeActivity[completeActivity[, "day"] == "Saturday",]$type <- as.factor("weekend")
completeActivity[completeActivity[, "day"] == "Saturday",]$type <- "weekend"
completeActivity$type <- NULL
completeActivity$type <- c("weekday")
completeActivity[completeActivity[, "day"] == "Saturday",]$type <- as.factor(c("weekend"))
completeActivity[completeActivity[, "day"] == "Sunday",]$type <- as.factor(c("weekend"))
sum(completeActivity$type == "weekday")
sum(completeActivity$type == "weekend")
completeActivity$type <- NULL
completeActivity$type <- c("weekday")
completeActivity[completeActivity[, "day"] == "Saturday",]$type <- c("weekend")
completeActivity[completeActivity[, "day"] == "Sunday",]$type <- c("weekend")
sum(completeActivity$type == "weekday")
sum(completeActivity$type == "weekend")
class(completeActivity[, 'type'])
completeActivity[, 'type'] <- as.factor(completeActivity[, 'type'])
class(completeActivity[, 'type'])
?par
?factor
stepsSum <- tapply(completeActivity$steps, factor(completeActivity$interval),
FUN = sum, na.rm = TRUE)
completeActivity$average <- stepsSum / length(uniqueIntervals)
library(lattice)
densityplot(~average|completeActivity$type,
main="Density Plot by Number of Cylinders",
xlab="Miles per Gallon")
densityplot(~completeActivity$average|completeActivity$type,
main="Density Plot by Number of Cylinders",
xlab="Miles per Gallon")
densityplot(~average|completeActivity$type,
main="Average Number of Steps Taken for 5-minute intervales",
ylab = "Number of Steps", xlab="Interval")
densityplot(~average|completeActivity$type,
main="Average Number of Steps Taken for 5-minute intervales",
ylab = "Number of Steps", xlab="Interval")
densityplot(~completeActivity$average|completeActivity$type,
main="Average Number of Steps Taken for 5-minute intervales",
ylab = "Number of Steps", xlab="Interval")
densityplot(~completeActivity$average|completeActivity$type,
main="Average Number of Steps Taken for 5-minute intervales",
ylab = "Number of Steps", xlab="Interval", layout = (1, 2))
densityplot(~completeActivity$average|completeActivity$type,
main="Average Number of Steps Taken for 5-minute intervales",
ylab = "Number of Steps", xlab="Interval", layout = (1, 2))
densityplot(~average|type, data = completeActivity
main="Average Number of Steps Taken for 5-minute intervales",
ylab = "Number of Steps", xlab="Interval", layout = (1, 2))
densityplot(~average|type, data = completeActivity
main="Average Number of Steps Taken for 5-minute intervales",
ylab = "Number of Steps", xlab="Interval", layout = (1, 2))
densityplot(~average|type, data = completeActivity,
main="Average Number of Steps Taken for 5-minute intervales",
ylab = "Number of Steps", xlab="Interval", layout = (1, 2))
densityplot(~average|type, data = completeActivity,
main="Average Number of Steps Taken for 5-minute intervales",
ylab = "Number of Steps", xlab="Interval", layout = (1, 2))
densityplot(~average|type, data = completeActivity,
main="Average Number of Steps Taken for 5-minute intervales",
ylab = "Number of Steps", xlab="Interval"
xyplot(average~interval|type, data = completeActivity,
main="Average Number of Steps Taken for 5-minute intervales",
ylab = "Number of Steps", xlab="Interval", layout = (1, 2))
xyplot(average~interval|type, data = completeActivity,
main="Average Number of Steps Taken for 5-minute intervales",
ylab = "Number of Steps", xlab="Interval", layout = (1, 2))
xyplot(average~interval|type, data = completeActivity,
main="Average Number of Steps Taken for 5-minute intervales",
ylab = "Number of Steps", xlab="Interval", layout = c(1, 2))
?xyplot
xyplot(average~interval|type, data = completeActivity,
main="Average Number of Steps Taken for 5-minute intervales",
ylab = "Number of Steps", xlab="Interval", layout = c(1, 2), type = "l")
stepsSum <- tapply(completeActivity$steps, factor(completeActivity$interval),
FUN = sum, na.rm = TRUE)
completeActivity$average <- stepsSum / length(uniqueIntervals)
View(completeActivity)
xyplot(average~interval|type, data = completeActivity,
main="Average Number of Steps Taken for 5-minute intervales",
ylab = "Number of Steps", xlab="Interval", layout = c(1, 2))
x.tick.number <- 10
at <- seq(1, nrow(completeActivity), length.out=x.tick.number)
labels <- round(seq(0, max(uniqueIntervals), length.out=x.tick.number))
xyplot(average~interval|type, data = completeActivity, type = "l",
main="Average Number of Steps Taken for 5-minute intervales",
scales=list(y=list(tick.number=10),
x=list(at=at, labels=labels, rot=90))
ylab = "Number of Steps", xlab="Interval", layout = c(1, 2))
xyplot(average~interval|type, data = completeActivity, type = "l",
main="Average Number of Steps Taken for 5-minute intervales",
scales=list(y=list(tick.number=10),
x=list(at=at, labels=labels, rot=90)),
ylab = "Number of Steps", xlab="Interval", layout = c(1, 2))
labels
xyplot(average~interval|type, data = completeActivity, type = "l",
main="Average Number of Steps Taken for 5-minute intervales",
scales=list(x=list(at=at, labels=labels, rot=90)),
ylab = "Number of Steps", xlab="Interval", layout = c(1, 2))
at
xyplot(average~interval|type, data = completeActivity, type = "l",
main="Average Number of Steps Taken for 5-minute intervales",
scales=list(y=list(tick.number=10),
x=list(at=at, labels=labels, rot=90)),
ylab = "Number of Steps", xlab="Interval", layout = c(1, 2))
?list
xyplot(average~interval|type, data = completeActivity, type = "l",
main="Average Number of Steps Taken for 5-minute intervales",
scales=list(y=list(tick.number=10),
x=list(at=at, labels=labels, rot=90)),
ylab = "Number of Steps", xlab="Interval", layout = c(1, 2))
xyplot(average~interval|type, data = completeActivity, type = "l",
main="Average Number of Steps Taken for 5-minute intervales",
scales=list(y=list(tick.number=10)),
ylab = "Number of Steps", xlab="Interval", layout = c(1, 2))
xyplot(average~interval|type, data = completeActivity, type = "l",
main="Average Number of Steps Taken for 5-minute intervales",
scales=list(y=list(tick.number=10),
x=list(at=at, labels=labels, rot=90)),
ylab = "Number of Steps", xlab="Interval", layout = c(1, 2))
xyplot(average~interval|type, data = completeActivity, type = "l",
main="Average Number of Steps Taken for 5-minute intervales",
scales=list(y=list(tick.number=10),
x=list(at=at, labels=labels)),
ylab = "Number of Steps", xlab="Interval", layout = c(1, 2))
averages <- aggregate(steps ~ interval + day, data = completeActivity, mean)
ggplot(averages, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
library(ggplot2)
averages <- aggregate(steps ~ interval + day, data = completeActivity, mean)
ggplot(averages, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
averages <- aggregate(steps ~ interval + type, data = completeActivity, mean)
ggplot(averages, aes(interval, steps)) + geom_line() + facet_grid(type ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
View(averages)
View(averages)
qplot(interval, steps, data=completeActivity, geom=c("line"), xlab="Interval",
ylab="Number of steps", main="") + facet_wrap(~ type, ncol=1)
completeActivity$averages <- NULL
completeActivity$averages <- aggregate(steps ~ interval + type, data = completeActivity, mean)
qplot(interval, steps, data=averages, geom=c("line"), xlab="Interval",
ylab="Number of steps", main="") + facet_wrap(~ day_type, ncol=1)
qplot(interval, steps, data=averages, geom=c("line"), xlab="Interval",
ylab="Number of steps", main="") + facet_wrap(~ type, ncol=1)
qplot(interval, steps, data=completeActivity, geom=c("line"), xlab="Interval",
ylab="Number of steps", main="") + facet_wrap(~ type, ncol=1)
View(completeActivity)
qplot(average, steps, data=completeActivity, geom=c("line"), xlab="Interval",
ylab="Number of steps", main="") + facet_wrap(~ type, ncol=1)
qplot(interval, average, data=completeActivity, geom=c("line"), xlab="Interval",
+       ylab="Number of steps", main="") + facet_wrap(~ type, ncol=1)
qplot(interval, average, data=completeActivity, geom=c("line"), xlab="Interval",
+       ylab="Number of steps", main="") + facet_wrap(~ type, ncol=1)
qplot(interval, average, data=completeActivity, geom=c("line"), xlab="Interval",
ylab="Number of steps", main="") + facet_wrap(~ type, ncol=1)
qplot(average, interval, data=completeActivity, geom=c("line"), xlab="Interval",
ylab="Number of steps", main="") + facet_wrap(~ type, ncol=1)
qplot(average, steps, data=completeActivity, geom=c("line"), xlab="Interval",
ylab="Number of steps", main="") + facet_wrap(~ type, ncol=1)
?qplot
qplot(interval, average, data=completeActivity, geom=c("line"), xlab="Interval",
ylab="Number of steps", main="") + facet_wrap(~ type, ncol=1)
View(averages)
rm(list=ls())
origActivity <- read.csv("activity.csv")
stepsPerDay <- aggregate(origActivity$steps, by=list(date=origActivity$date),
FUN=sum)
colnames(stepsPerDay)[2] <- c("steps")
totalStepsMean <- mean(stepsPerDay$steps, na.rm = TRUE)
totalStepsMean
totalStepsMedian <- median(stepsPerDay$steps, na.rm = TRUE)
totalStepsMedian
stepsAverage <- tapply(origActivity$steps, factor(origActivity$interval), FUN = mean,
na.rm = TRUE)
uniqueIntervals <- unique(origActivity$interval)
uniqueDates <- unique(origActivity$date)
# Create an empty data frame
cleanActivity <- data.frame(row.names = uniqueIntervals)
for(date in uniqueDates) {
cleanActivity <- cbind(cleanActivity,
date=origActivity[origActivity$date %in% date,]$steps)
}
# Set data frame columns
colnames(cleanActivity) <- uniqueDates
# Get indexes of missing values
missingValueRows <- which(is.na(cleanActivity), arr.ind=TRUE)
# Fill missing values with means of rows.
cleanActivity[missingValueRows] <-
rowMeans(cleanActivity,  na.rm = TRUE)[missingValueRows[,1]]
completeActivity <- data.frame(steps=integer(), date=factor(),
interval=integer())
# Loop through dates to fill in data frame
for(date in uniqueDates) {
steps <- data.frame(steps=cleanActivity[date], date=date,
interval=row.names(cleanActivity))
rownames(steps) <- NULL
names(steps) <- names(origActivity)
completeActivity <- rbind(completeActivity, steps)
}
stepsPerDayComplete <- aggregate(completeActivity$steps,
by=list(date=completeActivity$date), FUN=sum)
colnames(stepsPerDayComplete)[2] <- c("steps")
totalStepsMeanComplete <- mean(stepsPerDayComplete$steps, na.rm = TRUE)
totalStepsMeanComplete
totalStepsMedianComplete <- median(stepsPerDayComplete$steps, na.rm = TRUE)
totalStepsMedianComplete
# Convert date to date class
completeActivity$date <- as.Date(completeActivity$date, "%Y-%m-%d")
# Add weedday column
completeActivity$day <- weekdays(completeActivity$date)
# Add weekday type column
completeActivity$type <- c("weekday")
completeActivity[completeActivity[, "day"] == "Saturday",]$type <- c("weekend")
completeActivity[completeActivity[, "day"] == "Sunday",]$type <- c("weekend")
completeActivity[, 'type'] <- as.factor(completeActivity[, 'type'])
View(completeActivity)
completeActivity$average <- tapply(completeActivity$steps,
factor(completeActivity$interval),
FUN = mean, na.rm = TRUE)
# Calculate the average by dividing by the number of intervals
#completeActivity$average <- stepsSum / length(uniqueIntervals)
averages <- aggregate(steps ~ interval + type, data = completeActivity, mean)
View(completeActivity)
View(averages)
qplot(interval, average, data=completeActivity, geom=c("line"), xlab="Interval",
ylab="Number of steps", main="") + facet_wrap(~ type, ncol=1)
xyplot(average~interval|type, data = completeActivity, type = "l",
main="Average Number of Steps Taken for 5-minute intervales",
scales=list(y=list(tick.number=10),
x=list(at=at, labels=labels, rot=90)),
ylab = "Number of Steps", xlab="Interval", layout = c(1, 2))
x.tick.number <- 10
at <- seq(1, nrow(completeActivity), length.out=x.tick.number)
labels <- round(seq(0, max(uniqueIntervals), length.out=x.tick.number))
xyplot(average~interval|type, data = completeActivity, type = "l",
main="Average Number of Steps Taken for 5-minute intervales",
scales=list(y=list(tick.number=10),
x=list(at=at, labels=labels, rot=90)),
ylab = "Number of Steps", xlab="Interval", layout = c(1, 2))
qplot(interval, average, data=averages, geom=c("line"), xlab="Interval",
ylab="Number of steps", main="") + facet_wrap(~ type, ncol=1)
qplot(interval, steps, data=averages, geom=c("line"), xlab="Interval",
ylab="Number of steps", main="") + facet_wrap(~ type, ncol=1)
?tapply
averages <- aggregate(steps ~ interval + type, data = completeActivity, mean)
View(averages)
weekdayAverage <- aggregate(steps ~ interval, subset = type == "weekday", data = completeActivity, FUN = mean)
weekendAverage <- aggregate(steps ~ interval, subset = type == "weekend", data = completeActivity, FUN = mean)
View(weekdayAverage)
View(weekendAverage)
plot(weekdayAverage, type = "l")
plot(weekendAverage, type = "l")
View(weekdayAverage)
?aggregate
View(weekdayAverage)
View(weekendAverage)
average <- data.frame(interval = factor(), steps = integer(), type = factor())
weekdayAverage$type <- "weekday"
weekendAverage$type <- "weekend"
View(weekdayAverage)
average <- rbind(average, weekdayAverage)
average <- rbind(average, weekendAverage)
View(average)
View(average)
xyplot(steps~interval|type, data = average, type = "l",
)
xyplot(steps~interval|type, data = average, type = "l",
main="Average Number of Steps Taken for 5-minute intervales",
scales=list(y=list(tick.number=10),
x=list(at=at, labels=labels, rot=90)),
ylab = "Number of Steps", xlab="Interval", layout = c(1, 2))
View(average)
average <- aggregate(steps ~ interval, subset = type == "weekday",
data = completeActivity, FUN = mean)
average$type <- "weekday"
weekendAverage <- aggregate(steps ~ interval, subset = type == "weekend",
data = completeActivity, FUN = mean)
weekendAverage$type <- "weekend"
average <- rbind(average, weekendAverage)
View(average)
View(average)
average <- average[with(average, order[interval, type])]
average <- average[with(average, order[interval, type])]
average <- average[with(average, order[interval])]
View(average)
class(average$interval)
View(average)
average[ order(average[,1]), ]
average[ order(average[,1]), ]
rm(average)
rm(averages)
average[ order(average[,1], average[, 3]), ]
average[ order(average[,1], average[, 3], ), ]
averageSteps <- aggregate(steps ~ interval, subset = type == "weekday",
data = completeActivity, FUN = mean)
averageSteps$type <- "weekday"
weekendAverage <- aggregate(steps ~ interval, subset = type == "weekend",
data = completeActivity, FUN = mean)
weekendAverage$type <- "weekend"
averageSteps <- rbind(averageSteps, weekendAverage)
averageSteps <- average[ order(average[,1]), ]
average[ order(average[,1], average[, 3], ), ]
average[ order(averageSteps[,1], averageSteps[, 3], ), ]
averageSteps[ order(averageSteps[,1], averageSteps[, 3], ), ]
averageSteps[ order(averageSteps[,1], ), ]
averageSteps <- average[ order(averageSteps[,1]), ]
averageSteps <- averageSteps[ order(averageSteps[,1]), ]
xyplot(steps~interval|type, data = averageSteps, type = "l",
main="Average Number of Steps Taken for 5-minute intervales",
scales=list(y=list(tick.number=10),
x=list(at=at, labels=labels, rot=90)),
ylab = "Number of Steps", xlab="Interval", layout = c(1, 2))
xyplot(steps~interval|type, data = averageSteps, type = "l",
main="Average Number of Steps Taken for 5-minute intervales",
scales=list(y=list(tick.number=10),
x=list(at=at, labels=labels, rot=90)),
ylab = "Number of Steps", xlab="Interval", layout = c(1, 2))
qplot(steps, interval, data=averageSteps, geom=c("line"), xlab="Interval",
ylab="Number of steps", main="") + facet_wrap(~ type, ncol=1)
qplot(interval, steps, data=averageSteps, geom=c("line"), xlab="Interval",
ylab="Number of steps", main="") + facet_wrap(~ type, ncol=1)
View(averageSteps)
rownames(averageSteps) <- NUMM
rownames(averageSteps) <- NULL
View(averageSteps)
averageSteps[, 'interval'] <- as.integer(averageSteps[, 'interval'])
averageSteps <- averageSteps[ order(averageSteps[,1]), ]
averageSteps[, 'interval'] <- as.factor(averageSteps[, 'interval'])
View(averageSteps)
averageSteps <- aggregate(steps ~ interval, subset = type == "weekday",
data = completeActivity, FUN = mean)
averageSteps$type <- "weekday"
weekendAverage <- aggregate(steps ~ interval, subset = type == "weekend",
data = completeActivity, FUN = mean)
weekendAverage$type <- "weekend"
averageSteps <- rbind(averageSteps, weekendAverage)
View(averageSteps)
averageSteps[, 'interval'] <- as.integer(averageSteps[, 'interval'])
View(averageSteps)
averageSteps[, 'interval'] <- as.numeric(averageSteps[, 'interval'])
averageSteps <- aggregate(steps ~ interval, subset = type == "weekday",
data = completeActivity, FUN = mean)
averageSteps$type <- "weekday"
weekendAverage <- aggregate(steps ~ interval, subset = type == "weekend",
data = completeActivity, FUN = mean)
weekendAverage$type <- "weekend"
averageSteps <- rbind(averageSteps, weekendAverage)
averageSteps[, 'interval'] <- as.numeric(averageSteps[, 'interval'])
View(averageSteps)
averageSteps <- aggregate(steps ~ interval, subset = type == "weekday",
data = completeActivity, FUN = mean)
averageSteps$type <- "weekday"
weekendAverage <- aggregate(steps ~ interval, subset = type == "weekend",
data = completeActivity, FUN = mean)
weekendAverage$type <- "weekend"
averageSteps <- rbind(averageSteps, weekendAverage)
View(averageSteps)
max(averageSteps$interval)
averageSteps[, 'interval'] <- as.numeric(averageSteps[, 'interval'])
View(averageSteps)
averageSteps <- aggregate(steps ~ interval, subset = type == "weekday",
data = completeActivity, FUN = mean)
averageSteps$type <- "weekday"
weekendAverage <- aggregate(steps ~ interval, subset = type == "weekend",
data = completeActivity, FUN = mean)
weekendAverage$type <- "weekend"
averageSteps <- rbind(averageSteps, weekendAverage)
averageSteps[, 'interval'] <- as.integer(averageSteps[, 'interval'])
View(averageSteps)
?transform
averageSteps <- aggregate(steps ~ interval, subset = type == "weekday",
data = completeActivity, FUN = mean)
averageSteps$type <- "weekday"
weekendAverage <- aggregate(steps ~ interval, subset = type == "weekend",
data = completeActivity, FUN = mean)
weekendAverage$type <- "weekend"
averageSteps <- rbind(averageSteps, weekendAverage)
transform(averageSteps, interval = as.numeric(interval))
averageSteps <- aggregate(steps ~ interval, subset = type == "weekday",
data = completeActivity, FUN = mean)
averageSteps$type <- "weekday"
weekendAverage <- aggregate(steps ~ interval, subset = type == "weekend",
data = completeActivity, FUN = mean)
weekendAverage$type <- "weekend"
averageSteps <- rbind(averageSteps, weekendAverage)
averageSteps[, 'interval'] <- as.numeric(as.character(averageSteps[, 'interval']))
View(averageSteps)
averageSteps <- averageSteps[ order(averageSteps[,1]), ]
View(averageSteps)
rownames(averageSteps) <- NULL
View(averageSteps)
xyplot(steps~interval|type, data = averageSteps, type = "l",
main="Average Number of Steps Taken for 5-minute Intervals",
ylab = "Number of Steps", xlab="Interval", layout = c(1, 2))
